{"version":3,"sources":["assets/pokemon-logo.png","components/Header/Menu/index.js","components/Header/index.js","components/PokeCard/index.js","components/PokeDex/index.js","Pages/Homepage/index.js","Pages/Homepage/DetailPoke/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Header","className","to","src","Image","alt","PokeCard","addClassWrapper","type","navigateToDetail","data","props","history","push","id","imgSrc","this","onClick","name","PokeDex","pokemon","map","p","defaultProps","PokemonData","Homepage","state","filterSearch","handleOnChange","e","setState","target","value","console","log","dataFilter","filter","dataItem","toLowerCase","indexOf","onChange","placeholder","i","url","key","DetailPoke","location","image","desc","App","basename","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93c76f61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon-logo.4374c8d4.png\";","import React,{Component} from 'react';\r\n// import './Search.css';\r\n\r\nclass Menu extends Component {\r\n  render(){    \r\n    return(\r\n      <div>menu</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React,{Component} from 'react';\nimport './Header.css';\nimport Menu from './Menu';\nimport Image from '../../assets/pokemon-logo.png';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render(){\n    return(\n      <div className=\"Header\">\n      <div className=\"Container\">\n        \n        <div className=\"Header-row\">\n          <div className=\"Header-Logo\">\n            <Link to=\"/\">\n            <img src={Image} alt='Pokedex'/>\n            </Link>\n          </div>\n          <div className=\"Header-Search\">\n            {/* <Menu/> */}\n        </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n} \n\nexport default Header;","import React,{Component} from 'react';\nimport './PokeCard.css'\n// import {Link} from 'react-router-dom';\n\nconst POKE_IMG = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/'\n\n\nclass PokeCard extends Component {\n\n  addClassWrapper = (type) => {\n    if(type === 'Fire') return 'Fire';\n    if(type === 'Water') return 'Water';\n    if(type === 'Grass') return 'Grass';\n    if(type === 'Bug') return 'Bug';\n    if(type === 'Fairy') return 'Fairy';\n    if(type === 'Poison') return 'Poison';\n    if(type === 'Flying') return 'Flying';\n    if(type === 'Electric') return 'Electric';\n\n    return 'Normal';\n  }\n\n  navigateToDetail = (data) => {\n    // console.log(this.props)\n    this.props.history.push(`/detail/${this.props.id}`, {\n      data\n    })\n  }\n  render(){\n    let imgSrc = `${POKE_IMG}${this.props.id}.png`\n    return(\n           \n      // <div className=\"PokeDex row\">\n      // <div className=\"row\">\n        <div onClick={() => this.navigateToDetail(this.props.data)} className=\"Card\">\n          <div className={`Card-Item ${this.addClassWrapper(this.props.type)}`}>\n            <div className=\"Card-Thumbnail\">\n              <img src={imgSrc} alt='test'/>\n            </div>\n            <div className=\"Card-Body\">\n              <h2>{this.props.name}</h2>\n              <span>{this.props.type}</span>\n            </div>\n          </div>\n        </div>\n      // </div>\n      // </div>\n\n      // <div className=\"poke-row\">\n      //   <div onClick={() => this.navigateToDetail(this.props.data)} className='PokeCard'>\n      //     <div className={`PokeCard-Item ${this.addClassWrapper(this.props.type)}`}>\n      //       <h3 className=\"PokeCard-Title\">{this.props.name}</h3>\n      //       <img src={imgSrc} alt={this.props.title} align=\"right\"/>\n      //       <p className=\"PokeCard-Desc\">{this.props.type}</p>\n      //     </div>\n      //   </div>\n      //   </div>\n      )\n  }\n}\n\nexport default PokeCard;","import React,{Component} from 'react';\nimport './PokeDex.css';\nimport PokeCard from '../PokeCard'\nimport PokemonData from '../../assets/Pokemon.json'\n\nclass PokeDex extends Component{\n  static defaultProps = {\n    pokemon : PokemonData\n  }\n  render(){\n    const {pokemon} = this.props\n    return(\n      <div className=\"PokeDex\">\n        <h2>Pokedex</h2>\n        <div className=\"PokeDex-Cards\"> \n        {this.props.pokemon.map((p) => (\n        <PokeCard id={p.id} name={p.name} type={p.type}/>\n        ))}\n        </div>\n        </div>\n    )\n  }\n}\n\nexport default PokeDex; ","import React,{Component} from 'react';\nimport '../../components/PokeDex/PokeDex.css';\nimport PokeCard from '../../components/PokeCard'\nimport PokemonData from '../../assets/Pokemon.json';\n// import Search from './Search';\nimport './index.css';\n\nclass Homepage extends Component{\n  static defaultProps = {\n    pokemon : PokemonData\n  }\n\n  state = {\n    filterSearch: ''\n  }\n\n  handleOnChange = (e) => {\n    this.setState({\n      filterSearch: e.target.value\n    }, () => console.log(this.state.filterSearch))\n  }\n\n  render(){\n    const {filterSearch} = this.state\n    const {pokemon} = this.props\n    const dataFilter = PokemonData.filter(\n      dataItem => dataItem.name.toLowerCase().indexOf(filterSearch.toLowerCase()) !== -1\n      )\n    console.log(dataFilter)\n\n    \n    return(\n      <div className=\"PokeDex row\">\n        <div className=\"search-container\">\n          <input onChange={this.handleOnChange} type=\"text\" placeholder=\"Search..\" name=\"search\"/>\n        </div>\n         {/* <div className=\"row\">\n           <div className=\"Card\">\n             <div className=\"Card-Item\">\n               <div className=\"Card-Thumbnail\">\n                 <img src=\"https://img.pokemondb.net/artwork/large/zeraora.jpg\"/>\n               </div>\n               <div className=\"Card-Body\">\n                 <h2>Pikachu</h2>\n                 <span>Electric</span>\n\n               </div>\n             </div>\n           </div>\n         </div> */}\n\n       <div className=\"PokeDex-Cards\"> \n        {dataFilter.map((data, i) => {\n          return (\n              <PokeCard data={data} {...this.props} url={`/detail/${data.name}`} id={data.id} name={data.name} type={data.type} key={i}/>\n          )\n        })}\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default Homepage; ","import React,{Component} from 'react'\nimport './DetailPoke.css'\n\nclass DetailPoke extends Component{\n  render(){\n    return(\n      <div className='row'>\n      <div className=\"col1\">\n      <div className=\"itemLo nambahinDoooong\">\n      <div className=\"DetailPoke-Wrap\">\n        <div className=\"DetailPoke-image\">\n          <img src={this.props.location.state.data.image} alt='Pokemon'/>\n        </div>\n      </div>\n      </div>\n      </div>\n      <div className='col1'>\n        <div className=\"itemLo\">\n        <div className=\"DetailPoke-Title\">\n          <h2>{this.props.location.state.data.name}</h2>\n          <span>{this.props.location.state.data.type}</span>\n        </div>\n        {/* <div className=\"DetailPoke-Type\">\n          <h3>Type: </h3>\n        </div> */}\n        <div className=\"DetailPoke-Desc\">\n          <p>{this.props.location.state.data.desc}</p>\n        </div>      \n      </div>\n      </div>\n      </div>\n\n    )\n  }\n}\n\nexport default DetailPoke;","import React,{Component} from 'react';\nimport {Header, PokeDex} from './components';\nimport Homepage from './Pages/Homepage';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport DetailPoke from './Pages/Homepage/DetailPoke';\n\nclass App extends Component {\n  render(){\n    return(\n      <Router basename=\"/pokedex\">\n        <div className=\"Container\">\n        <Header/>\n        <Switch>\n          <Route path='/detail/:name' component={DetailPoke}/>\n          <Route path='/' component={Homepage}/>\n        </Switch>\n        </div>\n      </Router>    \n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}